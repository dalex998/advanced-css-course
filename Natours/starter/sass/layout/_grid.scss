.row {
  /*if we have enough width then get the value otherwise
    fill 100% of available space*/
  max-width: $grid-width;
  //background-color: #eee;
  /*trick to center block elements inside another block elements */
  /*automatic margins mean that the browser will figure out left and right margin (same)*/
  margin: 0 auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  /*selecrt all the elements that start with "col-"*/
  [class^="col-"] {
    //  background-color: orangered;
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
  .col-1-of-2 {
    /*we have to wrap sass variables in {} to make them work in the calc function*/
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    /*we have to wrap sass variables in {} to make them work in the calc function*/
    width: calc(
      (2 * (100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    /*we have to wrap sass variables in {} to make them work in the calc function*/
    width: calc(
      (2 * (100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    /*we have to wrap sass variables in {} to make them work in the calc function*/
    width: calc(
      (3 * (100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
